install.packages('ezknitr')
library(ezknitr)
library(ezknitr)
ezknit(file = "R/001-MasterFile.Rmd", out_dir = "output")
ezknit(file = "R/001-MasterFile.Rmd", out_dir = "output", keep_md = FALSE)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(knitr)
source('000-Functions.R')
markers <- read.csv('../data/markers_UPDATED.csv')
View(markers)
sets_raw <- read.csv('../data/sets_wide_UPDATED.csv')
navd88_setheads <- read.csv('../data/NAVD88.csv')
markers_raw <- read.csv('../data/markers_UPDATED.csv')
sets_raw <- read.csv('../data/sets_wide_UPDATED.csv')
navd88_setheads <- read.csv('../data/NAVD88.csv')
str(markers)
str(markers_raw)
markers <- markers_raw %>%
mutate(date = as.Date(date),
app_date = as.Date(ref_date))
str(markers)
markers <- markers_raw %>%
mutate(date = as.Date(date, format = '%m/%d/%y'),
app_date = as.Date(ref_date, format = '%m/%d/%y'))
str(markers)
markers <- markers_raw %>%
mutate(date = lubridate::mdy(date),
app_date = lubridate::mdy(ref_date))
markers <- markers_raw %>%
mutate(date = lubridate::mdy(date),
app_date = lubridate::mdy(ref_date)) %>%
select(-ref_date)
str(markers)
markers <- markers_raw %>%
mutate(date = lubridate::mdy(date),
app_date = lubridate::mdy(ref_date)) %>%
select(-ref_date) %>%
gather(key = MHplot, value = value, A, B, C, D)
markers <- markers_raw %>%
mutate(date = lubridate::mdy(date),
app_date = lubridate::mdy(ref_date)) %>%
select(-ref_date) %>%
gather(key = ncore, value = value, A, B, C, D)
head(markers, 15)
markers <- markers_raw %>%
mutate(date = lubridate::mdy(date),
app_date = lubridate::mdy(ref_date)) %>%
gather(key = ncore, value = value, A, B, C, D) %>%
select(SET, MHplot, ncore, date, app_date, value) %>%
arrange(SET, date, MHplot)
head(markers, 20)
markers <- markers_raw %>%
mutate(date = lubridate::mdy(date),
app_date = lubridate::mdy(ref_date)) %>%
gather(key = ncore, value = value, A, B, C, D) %>%
select(SET, MHplot, ncore, date, app_date, value) %>%
arrange(SET, date, MHplot, ncore)
head(markers, 20)
source('000-Functions.R')
markers <- markers_raw %>%
mutate(date = lubridate::mdy(date),
app_date = lubridate::mdy(ref_date)) %>%
gather(key = ncore, value = value, A, B, C, D) %>%
select(SET, MHplot, ncore, date, app_date, value) %>%
arrange(SET, date, MHplot, ncore) %>%
attach_site_names()
head(markers)
tail(markers)
str(sets_raw)
pins <- sets_raw %>%
mutate(date = lubidate::mdy(date)) %>%
gather(key = npin, value = value, -SET, -date, -arm) %>%
attach_site_names()
pins <- sets_raw %>%
mutate(date = lubridate::mdy(date)) %>%
gather(key = npin, value = value, -SET, -date, -arm) %>%
attach_site_names()
head(pins, 20)
pins <- sets_raw %>%
mutate(date = lubridate::mdy(date)) %>%
gather(key = npin, value = value, -SET, -date, -arm) %>%
arrange(SET, date, arm, npin) %>%
attach_site_names()
head(pins, 20)
tail(pins, 20)
library(broom)
models <- pins %>%
group_by(SET, arm, npin) %>%
do(mod = lm(value ~ date, data = .))
modelcoef <- tidy(models, mod, conf.int=TRUE, conf.level=0.95) # this gives the intercept, slope, and p values, among others; conf.int=TRUE, conf.level=0.95 gives the 95% confidence interval
# get rid of intercept row,
# calculate mm/yr for all the terms,
# round mm/yr to 3 digits,
# get rid of the mm/day stuff
rates_elev_pins <- modelcoef %>%
filter(term == "date") %>%
mutate(rate_mm.yr = round(estimate*365.25, 3),
se_mm.yr = round(std.error*365.25, 3),
CIlow_mm.yr = round(conf.low*365.25, 3),
CIhigh_mm.yr = round(conf.high*365.25, 3),
p.value = round(p.value, 4),
statistic = round(statistic, 3)) %>%
select(SET, arm, pin, rate_mm.yr, se_mm.yr, CIlow_mm.yr, CIhigh_mm.yr, statistic, p.value)
models <- pins %>%
group_by(SET, arm, npin) %>%
do(mod = lm(value ~ date, data = .))
modelcoef <- tidy(models, mod, conf.int=TRUE, conf.level=0.95) # this gives the intercept, slope, and p values, among others; conf.int=TRUE, conf.level=0.95 gives the 95% confidence interval
# get rid of intercept row,
# calculate mm/yr for all the terms,
# round mm/yr to 3 digits,
# get rid of the mm/day stuff
rates_elev_pins <- modelcoef %>%
filter(term == "date") %>%
mutate(rate_mm.yr = round(estimate*365.25, 3),
se_mm.yr = round(std.error*365.25, 3),
CIlow_mm.yr = round(conf.low*365.25, 3),
CIhigh_mm.yr = round(conf.high*365.25, 3),
p.value = round(p.value, 4),
statistic = round(statistic, 3)) %>%
select(SET, arm, npin, rate_mm.yr, se_mm.yr, CIlow_mm.yr, CIhigh_mm.yr, statistic, p.value)
modelsummary <- glance(models, mod) # this gives r^2 and adjusted r^2, and p values, among others
kable(head(rates_elev_pins), align='c')
rates_elev_set <- rates_elev_pins %>%
group_by(SET) %>%
summarize(rate = mean(rate_mm.yr, na.rm = TRUE)) %>%
ungroup()
kable(rates_elev_set, align = 'c')
rates_elev_set <- rates_elev_pins %>%
group_by(SET) %>%
summarize(rate = mean(rate_mm.yr, na.rm = TRUE)) %>%
ungroup() %>%
attach_site_names()
kable(rates_elev_set, align = 'c')
rates_elev_set <- rates_elev_pins %>%
group_by(SET) %>%
summarize(rate = mean(rate_mm.yr, na.rm = TRUE),
stdev_rate = sd(rate_mm.yr, na.rm = TRUE)) %>%
ungroup() %>%
attach_site_names()
kable(rates_elev_set, align = 'c')
rates_elev_set <- rates_elev_pins %>%
group_by(SET) %>%
summarize(rate = mean(rate_mm.yr, na.rm = TRUE),
sd_rate = sd(rate_mm.yr, na.rm = TRUE)) %>%
ungroup() %>%
attach_site_names()
kable(rates_elev_set, align = 'c')
rates_elev_site <- rates_elev_set %>%
group_by(site) %>%
summarize(rate = mean(rate, na.rm = TRUE),
sd_rate = sd(rate, na.rm = TRUE)) %>%
ungroup()
kable(rates_elev_site, align = 'c', caption = "Mean and standard deviation of elevation rate change in mm per year by site")
rates_elev_site <- rates_elev_set %>%
group_by(site) %>%
rename(rates = rate) %>%
summarize(rate = mean(rates, na.rm = TRUE),
sd_rate = sd(rates, na.rm = TRUE)) %>%
ungroup()
kable(rates_elev_site, align = 'c', caption = "Mean and standard deviation of elevation rate change in mm per year by site")
?kable
kable(rates_elev_set,
align = 'c',
digits = 3,
caption = "Mean and standard deviation of elevation rate change in mm per year by SET")
rates_elev_site <- rates_elev_set %>%
group_by(site) %>%
rename(rates = rate) %>%
summarize(rate = mean(rates, na.rm = TRUE),
sd_rate = sd(rates, na.rm = TRUE)) %>%
ungroup()
kable(rates_elev_site,
align = 'c',
digits = 3,
caption = "Mean and standard deviation of elevation rate change in mm per year by site")
