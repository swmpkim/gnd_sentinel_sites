kable(rates_mh_overall_setsumm, align = 'c', digits = 3)
rates_mh_overall_setsumm <- rates_mh_annual_setsumm %>%
ungroup() %>%
gather(key = year, value = setmean, -site, -SET) %>%
group_by(site) %>%
summarize(overall_mean = mean(setmean, na.rm = TRUE))
kable(rates_mh_overall_setsumm, align = 'c', digits = 3)
rates_mh_overall_setsumm <- rates_mh_annual_setsumm %>%
ungroup() %>%
gather(key = year, value = setmean, -site, -SET) %>%
group_by(site, SET) %>%
summarize(overall_mean = mean(setmean, na.rm = TRUE))
kable(rates_mh_overall_setsumm, align = 'c', digits = 3)
library(dplyr)
library(tidyr)
library(ggplot2)
library(tibble)
library(lubridate)
library(knitr)
library(broom)
library(agricolae)
library(here)
source(here('R', '000-Functions.R'))
markers_raw <- read.csv(here('data', 'markers_UPDATED.csv'))
sets_raw <- read.csv(here('data', 'sets_wide_UPDATED.csv'))
navd88_setheads <- read.csv(here('data', 'NAVD88.csv'))
markers <- markers_raw %>%
mutate(date = lubridate::mdy(date),
app_date = lubridate::mdy(ref_date)) %>%
gather(key = ncore, value = value, A, B, C, D) %>%
select(SET, MHplot, ncore, date, app_date, value) %>%
arrange(SET, date, MHplot, ncore) %>%
attach_site_names()
pins <- sets_raw %>%
mutate(date = lubridate::mdy(date)) %>%
gather(key = npin, value = value, -SET, -date, -arm) %>%
arrange(SET, date, arm, npin) %>%
attach_site_names()
models <- pins %>%
group_by(SET, arm, npin) %>%
do(mod = lm(value ~ date, data = .))
modelcoef <- tidy(models, mod, conf.int=TRUE, conf.level=0.95) # this gives the intercept, slope, and p values, among others; conf.int=TRUE, conf.level=0.95 gives the 95% confidence interval
# get rid of intercept row,
# calculate mm/yr for all the terms,
# round mm/yr to 3 digits,
# get rid of the mm/day stuff
rates_elev_pins <- modelcoef %>%
filter(term == "date") %>%
mutate(rate_mm.yr = round(estimate*365.25, 3),
se_mm.yr = round(std.error*365.25, 3),
CIlow_mm.yr = round(conf.low*365.25, 3),
CIhigh_mm.yr = round(conf.high*365.25, 3),
p.value = round(p.value, 4),
statistic = round(statistic, 3)) %>%
select(SET, arm, npin, rate_mm.yr, se_mm.yr, CIlow_mm.yr, CIhigh_mm.yr, statistic, p.value)
modelsummary <- glance(models, mod) # this gives r^2 and adjusted r^2, and p values, among others
rates_elev_pins
rates_elev_set <- rates_elev_pins %>%
group_by(SET) %>%
summarize(rate = mean(rate_mm.yr, na.rm = TRUE),
sd_rate = sd(rate_mm.yr, na.rm = TRUE),
se_rate = sd_rate / sqrt(length(SET)),
CI_low = rate - 1.96*se_rate,
CI_high = rate + 1.96*se_rate) %>%
ungroup() %>%
attach_site_names()
kable(rates_elev_set,
align = 'c',
digits = 3,
caption = "Mean and standard deviation of elevation rate change in mm per year by SET")
rates_elev_site <- rates_elev_set %>%
group_by(site) %>%
rename(rates = rate) %>%
summarize(rate = mean(rates, na.rm = TRUE),
sd_rate = sd(rates, na.rm = TRUE),
se_rate = sd_rate / sqrt(length(SET)),
CI_low = rate - 1.96*se_rate,
CI_high = rate + 1.96*se_rate) %>%
ungroup()
kable(rates_elev_site,
align = 'c',
digits = 3,
caption = "Mean and standard deviation of elevation rate change in mm per year by site")
markers_trimmed <- markers %>%
group_by(site, SET, MHplot) %>%
filter(app_date <= "2012-03-02")
panne <- markers_trimmed %>% filter(site == 'JURO_High')
head(panne)
View(panne)
panne <- markers_trimmed %>% filter(SET == 'PANNE-1')
panne2 <- panne %>% group_by(SET, MHplot, date) %>% summarize(mean = mean(value, na.rm = TRUE))
View(panne2)
View(panne)
unique(markers_trimmed$SET)
markers_trimmed <- markers %>%
group_by(site, SET, MHplot) %>%
filter(app_date <= "2012-03-02",
SET != "PANNE-1")
unique(markers_trimmed$SET)
rates_mh_overall_setsumm <- rates_mh_annual_setsumm %>%
ungroup() %>%
gather(key = year, value = setmean, -site, -SET) %>%
group_by(site, SET) %>%
summarize(overall_mean = mean(setmean, na.rm = TRUE))
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# Chunk 2
library(dplyr)
library(tidyr)
library(ggplot2)
library(tibble)
library(lubridate)
library(knitr)
library(broom)
library(agricolae)
library(here)
source(here('R', '000-Functions.R'))
# Chunk 3
markers_raw <- read.csv(here('data', 'markers_UPDATED.csv'))
sets_raw <- read.csv(here('data', 'sets_wide_UPDATED.csv'))
navd88_setheads <- read.csv(here('data', 'NAVD88.csv'))
# Chunk 4
markers <- markers_raw %>%
mutate(date = lubridate::mdy(date),
app_date = lubridate::mdy(ref_date)) %>%
gather(key = ncore, value = value, A, B, C, D) %>%
select(SET, MHplot, ncore, date, app_date, value) %>%
arrange(SET, date, MHplot, ncore) %>%
attach_site_names()
# Chunk 5
pins <- sets_raw %>%
mutate(date = lubridate::mdy(date)) %>%
gather(key = npin, value = value, -SET, -date, -arm) %>%
arrange(SET, date, arm, npin) %>%
attach_site_names()
# Chunk 6
sessionInfo()
# Chunk 7
models <- pins %>%
group_by(SET, arm, npin) %>%
do(mod = lm(value ~ date, data = .))
modelcoef <- tidy(models, mod, conf.int=TRUE, conf.level=0.95) # this gives the intercept, slope, and p values, among others; conf.int=TRUE, conf.level=0.95 gives the 95% confidence interval
# get rid of intercept row,
# calculate mm/yr for all the terms,
# round mm/yr to 3 digits,
# get rid of the mm/day stuff
rates_elev_pins <- modelcoef %>%
filter(term == "date") %>%
mutate(rate_mm.yr = round(estimate*365.25, 3),
se_mm.yr = round(std.error*365.25, 3),
CIlow_mm.yr = round(conf.low*365.25, 3),
CIhigh_mm.yr = round(conf.high*365.25, 3),
p.value = round(p.value, 4),
statistic = round(statistic, 3)) %>%
select(SET, arm, npin, rate_mm.yr, se_mm.yr, CIlow_mm.yr, CIhigh_mm.yr, statistic, p.value)
modelsummary <- glance(models, mod) # this gives r^2 and adjusted r^2, and p values, among others
rates_elev_pins
# Chunk 8
rates_elev_set <- rates_elev_pins %>%
group_by(SET) %>%
summarize(rate = mean(rate_mm.yr, na.rm = TRUE),
sd_rate = sd(rate_mm.yr, na.rm = TRUE),
se_rate = sd_rate / sqrt(length(SET)),
CI_low = rate - 1.96*se_rate,
CI_high = rate + 1.96*se_rate) %>%
ungroup() %>%
attach_site_names()
kable(rates_elev_set,
align = 'c',
digits = 3,
caption = "Mean and standard deviation of elevation rate change in mm per year by SET")
# Chunk 9
rates_elev_site <- rates_elev_set %>%
group_by(site) %>%
rename(rates = rate) %>%
summarize(rate = mean(rates, na.rm = TRUE),
sd_rate = sd(rates, na.rm = TRUE),
se_rate = sd_rate / sqrt(length(SET)),
CI_low = rate - 1.96*se_rate,
CI_high = rate + 1.96*se_rate) %>%
ungroup()
kable(rates_elev_site,
align = 'c',
digits = 3,
caption = "Mean and standard deviation of elevation rate change in mm per year by site")
# Chunk 10
markers_trimmed <- markers %>%
group_by(site, SET, MHplot) %>%
filter(app_date <= "2012-03-02",
SET != "PANNE-1")
# Chunk 11
marker_rates_inc <- markers_trimmed %>%
ungroup() %>%
group_by(site, SET, MHplot, date) %>%
summarize(plotmean = mean(value, na.rm = TRUE)) %>%
mutate(inc_change = plotmean - lag(plotmean, 1),
plotdatediff = as.numeric(date - lag(date, 1)),
inc_rate = (inc_change / plotdatediff) * 365.25) %>%
ungroup()
# Chunk 12
marker_rates_inc_plotsumm <- marker_rates_inc %>%
group_by(site, SET, MHplot) %>%
summarize(mean_inc_change = mean(inc_change, na.rm = TRUE),
sd_inc_change = sd(inc_change, na.rm = TRUE),
se_inc_change = sd_inc_change / sqrt(length(!is.na(inc_change))),
ci_95_inc_change = paste0(round((mean_inc_change - 1.96*se_inc_change), 3), ", ", round((mean_inc_change + 1.96*se_inc_change), 3)),
mean_inc_rate = mean(inc_rate, na.rm = TRUE),
sd_inc_rate = sd(inc_rate, na.rm = TRUE),
se_inc_rate = sd_inc_rate / sqrt(length(!is.na(inc_rate))),
ci_95_inc_rate = paste0(round((mean_inc_rate - 1.96*se_inc_rate), 3), ", ", round((mean_inc_rate + 1.96*se_inc_rate), 3))) %>%
ungroup()
marker_rates_inc_plotsumm
# Chunk 13
marker_rates_inc_SETsumm <- marker_rates_inc_plotsumm %>%
select(site, SET, MHplot, inc_change = mean_inc_change, inc_rate = mean_inc_rate) %>%
group_by(site, SET) %>%
summarize(mean_inc_change = mean(inc_change, na.rm = TRUE),
sd_inc_change = sd(inc_change, na.rm = TRUE),
se_inc_change = sd_inc_change / sqrt(length(!is.na(inc_change))),
ci_95_inc_change = paste0(round((mean_inc_change - 1.96*se_inc_change), 3), ", ", round((mean_inc_change + 1.96*se_inc_change), 3)),
mean_inc_rate = mean(inc_rate, na.rm = TRUE),
sd_inc_rate = sd(inc_rate, na.rm = TRUE),
se_inc_rate = sd_inc_rate / sqrt(length(!is.na(inc_rate))),
ci_95_inc_rate = paste0(round((mean_inc_rate - 1.96*se_inc_rate), 3), ", ", round((mean_inc_rate + 1.96*se_inc_rate), 3))) %>%
ungroup()
kable(marker_rates_inc_SETsumm,
digits = 3,
align = 'c',
caption = 'Incremental Accretion Change by SET')
# Chunk 14
marker_rates_inc_sitesumm <- marker_rates_inc_SETsumm %>%
select(site, SET, inc_change = mean_inc_change, inc_rate = mean_inc_rate) %>%
group_by(site) %>%
summarize(mean_inc_change = mean(inc_change, na.rm = TRUE),
sd_inc_change = sd(inc_change, na.rm = TRUE),
se_inc_change = sd_inc_change / sqrt(length(!is.na(inc_change))),
ci_95_inc_change = paste0(round((mean_inc_change - 1.96*se_inc_change), 3), ", ", round((mean_inc_change + 1.96*se_inc_change), 3)),
mean_inc_rate = mean(inc_rate, na.rm = TRUE),
sd_inc_rate = sd(inc_rate, na.rm = TRUE),
se_inc_rate = sd_inc_rate / sqrt(length(!is.na(inc_rate))),
ci_95_inc_rate = paste0(round((mean_inc_rate - 1.96*se_inc_rate), 3), ", ", round((mean_inc_rate + 1.96*se_inc_rate), 3))) %>%
ungroup()
kable(marker_rates_inc_sitesumm,
digits = 3,
align = 'c',
caption = 'Incremental Accretion Change by Site')
# Chunk 15
## 2012
marker_rates_2012 <- markers_trimmed %>%
ungroup() %>%
filter(date >= '2011-10-01',
date <= '2012-12-31') %>%
group_by(site, SET, MHplot, date) %>%
summarize(plotmean = mean(value, na.rm = TRUE)) %>%
ungroup()
models <- marker_rates_2012 %>%
group_by(site, SET, MHplot) %>%
filter(!is.na(plotmean)) %>%
do(mod = lm(plotmean ~ date, data = .))
modelcoef <- tidy(models, mod, conf.int=TRUE, conf.level=0.95)
rates_mh_annual_2012 <- modelcoef %>%
filter(term == "date") %>%
mutate(rate_mm.yr = round(estimate*365.25, 3),
se_mm.yr = round(std.error*365.25, 3),
CIlow_mm.yr = round(conf.low*365.25, 3),
CIhigh_mm.yr = round(conf.high*365.25, 3),
p.value = round(p.value, 4),
statistic = round(statistic, 3),
year = '2012') %>%
select(year, site, SET, MHplot, rate_mm.yr, se_mm.yr, CIlow_mm.yr, CIhigh_mm.yr)
## 2013
marker_rates_2013 <- markers_trimmed %>%
ungroup() %>%
filter(date >= '2012-10-01',
date <= '2013-12-31') %>%
group_by(site, SET, MHplot, date) %>%
summarize(plotmean = mean(value, na.rm = TRUE)) %>%
ungroup()
models <- marker_rates_2013 %>%
group_by(site, SET, MHplot) %>%
filter(!is.na(plotmean)) %>%
do(mod = lm(plotmean ~ date, data = .))
modelcoef <- tidy(models, mod, conf.int=TRUE, conf.level=0.95)
rates_mh_annual_2013 <- modelcoef %>%
filter(term == "date") %>%
mutate(rate_mm.yr = round(estimate*365.25, 3),
se_mm.yr = round(std.error*365.25, 3),
CIlow_mm.yr = round(conf.low*365.25, 3),
CIhigh_mm.yr = round(conf.high*365.25, 3),
p.value = round(p.value, 4),
statistic = round(statistic, 3),
year = '2013') %>%
select(year, site, SET, MHplot, rate_mm.yr, se_mm.yr, CIlow_mm.yr, CIhigh_mm.yr)
## 2014
marker_rates_2014 <- markers_trimmed %>%
ungroup() %>%
filter(date >= '2013-10-01',
date <= '2014-12-31') %>%
group_by(site, SET, MHplot, date) %>%
summarize(plotmean = mean(value, na.rm = TRUE)) %>%
ungroup()
models <- marker_rates_2014 %>%
group_by(site, SET, MHplot) %>%
filter(!is.na(plotmean)) %>%
do(mod = lm(plotmean ~ date, data = .))
modelcoef <- tidy(models, mod, conf.int=TRUE, conf.level=0.95)
rates_mh_annual_2014 <- modelcoef %>%
filter(term == "date") %>%
mutate(rate_mm.yr = round(estimate*365.25, 3),
se_mm.yr = round(std.error*365.25, 3),
CIlow_mm.yr = round(conf.low*365.25, 3),
CIhigh_mm.yr = round(conf.high*365.25, 3),
p.value = round(p.value, 4),
statistic = round(statistic, 3),
year = '2014') %>%
select(year, site, SET, MHplot, rate_mm.yr, se_mm.yr, CIlow_mm.yr, CIhigh_mm.yr)
## 2015
marker_rates_2015 <- markers_trimmed %>%
ungroup() %>%
filter(date >= '2014-10-01',
date <= '2015-12-31') %>%
group_by(site, SET, MHplot, date) %>%
summarize(plotmean = mean(value, na.rm = TRUE)) %>%
ungroup()
models <- marker_rates_2015 %>%
group_by(site, SET, MHplot) %>%
filter(!is.na(plotmean)) %>%
do(mod = lm(plotmean ~ date, data = .))
modelcoef <- tidy(models, mod, conf.int=TRUE, conf.level=0.95)
rates_mh_annual_2015 <- modelcoef %>%
filter(term == "date") %>%
mutate(rate_mm.yr = round(estimate*365.25, 3),
se_mm.yr = round(std.error*365.25, 3),
CIlow_mm.yr = round(conf.low*365.25, 3),
CIhigh_mm.yr = round(conf.high*365.25, 3),
p.value = round(p.value, 4),
statistic = round(statistic, 3),
year = '2015') %>%
select(year, site, SET, MHplot, rate_mm.yr, se_mm.yr, CIlow_mm.yr, CIhigh_mm.yr)
## 2016
marker_rates_2016 <- markers_trimmed %>%
ungroup() %>%
filter(date >= '2015-10-01',
date <= '2016-12-31') %>%
group_by(site, SET, MHplot, date) %>%
summarize(plotmean = mean(value, na.rm = TRUE))
models <- marker_rates_2016 %>%
group_by(site, SET, MHplot) %>%
filter(!is.na(plotmean)) %>%
do(mod = lm(plotmean ~ date, data = .))
modelcoef <- tidy(models, mod, conf.int=TRUE, conf.level=0.95)
rates_mh_annual_2016 <- modelcoef %>%
filter(term == "date") %>%
mutate(rate_mm.yr = round(estimate*365.25, 3),
se_mm.yr = round(std.error*365.25, 3),
CIlow_mm.yr = round(conf.low*365.25, 3),
CIhigh_mm.yr = round(conf.high*365.25, 3),
p.value = round(p.value, 4),
statistic = round(statistic, 3),
year = '2016') %>%
select(year, site, SET, MHplot, rate_mm.yr, se_mm.yr, CIlow_mm.yr, CIhigh_mm.yr)
# Bind them all together and get rid of the individual files
rates_mh_annual_all <- bind_rows(rates_mh_annual_2012, rates_mh_annual_2013, rates_mh_annual_2014, rates_mh_annual_2015, rates_mh_annual_2016)
rm(marker_rates_2012, marker_rates_2013, marker_rates_2014, marker_rates_2015, marker_rates_2016, rates_mh_annual_2012, rates_mh_annual_2013, rates_mh_annual_2014, rates_mh_annual_2015, rates_mh_annual_2016)
# Chunk 16
rates_mh_annual_wide <- rates_mh_annual_all %>%
select(year, site, SET, MHplot, rate_mm.yr) %>%
spread(key = year, value = rate_mm.yr)
# this should introduce some NAs when values weren't calculated for a year
rates_mh_annual_wide
# Chunk 17
rates_mh_annual_setsumm <- rates_mh_annual_wide %>%
gather(key = year, value = plotmean, -site, -SET, -MHplot) %>%
group_by(site, SET, year) %>%
summarize(setmean = mean(plotmean, na.rm = TRUE)) %>%
spread(key = year, value = setmean)
kable(rates_mh_annual_setsumm, align = 'c', digits = 3, caption = "Mean annual (fall to fall) accretion rates, mm/yr, by SET")
# Chunk 18
rates_mh_annual_plotsumm <- rates_mh_annual_wide %>%
gather(key = year, value = value, -site, -SET, -MHplot) %>%
group_by(site, SET, MHplot) %>%
summarize(plotmean = mean(value, na.rm = TRUE))
kable(rates_mh_annual_plotsumm, align = 'c', digits = 3)
# Chunk 19
rates_mh_overall_setsumm <- rates_mh_annual_setsumm %>%
ungroup() %>%
gather(key = year, value = setmean, -site, -SET) %>%
group_by(site, SET) %>%
summarize(overall_mean = mean(setmean, na.rm = TRUE))
kable(rates_mh_overall_setsumm, align = 'c', digits = 3)
fit <- aov(mean_inc_rate ~ site, data = rates_mh_overall_setsumm)
anova(fit)
fit <- aov(mean_inc_rate ~ site, data = rates_mh_overall_setsumm)
names(rates_mh_overall_setsumm)
fit <- aov(overall_mean ~ site, data = rates_mh_overall_setsumm)
anova(fit)
fit <- aov(overall_mean ~ site, data = rates_mh_overall_setsumm)
anova(fit)
# from library(agricolae)
hsd <- HSD.test(fit, 'site') # storing it
hsdgroups <- hsd$groups
kable(hsdgroups, caption = "Tukey's HSD on incremental accretion rates", digits=2, align='c')
# plot 0.05 alpha groupings
plot(hsd,
main = "Accretion rate groupings \nTukey HSD alpha = 0.05",
xlab = "Site",
ylab = "long-term change (mm/yr)")
box()
### THIS SHOULD WORK WITH EITHER PINS OR MHs
# whichever has been used in the model
# make data frames with all relevant data
# hsd$means shows min, max, and quartiles
# hsd$groups gives the group letters
hsdresults <- rownames_to_column(hsd$means, 'site')
names(hsdresults)[2] <- 'sitemean'
hsdresults2 <- rownames_to_column(hsd$groups, 'site')
names(hsdresults2)[2] <- 'sitemean'
# merge the data frames
hsdresults3 <- merge(hsdresults, hsdresults2, by=c('site', 'sitemean'))
hsdresults4 <- mutate(hsdresults3, site=factor(site, levels=c("CLMAJ", "JURO_High", "JURO_Mid", "JURO_Low", "SPAL"), ordered=TRUE))
# plot the tukey results; factor order puts highest elevation first;
# decreasing elevation from left to right
hsdplot <- ggplot(hsdresults4) +
geom_point(aes(x=site, y=sitemean, col=groups), show.legend=FALSE, size=3) +
geom_linerange(aes(x=site, ymin=Min, ymax=Max, col=groups), size=1, show.legend=FALSE) +
ggtitle("Tukey groupings - accretion rates", subtitle = "point is mean change; lines extend to min and max by site") +
labs(x="Site", y="rate of change (mm/yr)") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
# annotate the groupings inside the plot
# this puts groups at the top without coordinate-flipping
hsdplot + geom_text(aes(x=site, y=max(hsdresults4$Max), label=groups), nudge_y=0.3)
rates_mh_annual_plotsumm <- rates_mh_annual_wide %>%
gather(key = year, value = value, -site, -SET, -MHplot) %>%
group_by(site, SET, MHplot) %>%
summarize(plotmean = mean(value, na.rm = TRUE))
rates_mh_annual_plotsumm
rates_mh_overall_setsumm <- rates_mh_annual_plotsumm %>%
ungroup() %>%
group_by(site, SET) %>%
summarize(overall_mean = mean(plotmean, na.rm = TRUE))
kable(rates_mh_overall_setsumm, align = 'c', digits = 3, caption = "average annualized rate of accretion by SET")
fit <- aov(mean_inc_rate ~ site, data = marker_rates_inc_SETsumm)
anova(fit)
fit <- aov(overall_mean ~ site, data = rates_mh_overall_setsumm)
anova(fit)
# from library(agricolae)
hsd <- HSD.test(fit, 'site') # storing it
hsdgroups <- hsd$groups
kable(hsdgroups, caption = "Tukey's HSD on incremental accretion rates", digits=2, align='c')
# plot 0.05 alpha groupings
plot(hsd,
main = "Accretion rate groupings \nTukey HSD alpha = 0.05",
xlab = "Site",
ylab = "long-term change (mm/yr)")
box()
### THIS SHOULD WORK WITH EITHER PINS OR MHs
# whichever has been used in the model
# make data frames with all relevant data
# hsd$means shows min, max, and quartiles
# hsd$groups gives the group letters
hsdresults <- rownames_to_column(hsd$means, 'site')
names(hsdresults)[2] <- 'sitemean'
hsdresults2 <- rownames_to_column(hsd$groups, 'site')
names(hsdresults2)[2] <- 'sitemean'
# merge the data frames
hsdresults3 <- merge(hsdresults, hsdresults2, by=c('site', 'sitemean'))
hsdresults4 <- mutate(hsdresults3, site=factor(site, levels=c("CLMAJ", "JURO_High", "JURO_Mid", "JURO_Low", "SPAL"), ordered=TRUE))
# plot the tukey results; factor order puts highest elevation first;
# decreasing elevation from left to right
hsdplot <- ggplot(hsdresults4) +
geom_point(aes(x=site, y=sitemean, col=groups), show.legend=FALSE, size=3) +
geom_linerange(aes(x=site, ymin=Min, ymax=Max, col=groups), size=1, show.legend=FALSE) +
ggtitle("Tukey groupings - accretion rates", subtitle = "point is mean change; lines extend to min and max by site") +
labs(x="Site", y="rate of change (mm/yr)") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
# annotate the groupings inside the plot
# this puts groups at the top without coordinate-flipping
hsdplot + geom_text(aes(x=site, y=max(hsdresults4$Max), label=groups), nudge_y=0.3)
# flip the coordinates; scale_x_discrete command makes sure the elevations come out correctly -
# highest at top, lowest at bottom
# get the group annotations to the left, by the site labels
pinhsdplot <- hsdplot + scale_x_discrete(limits=rev(levels(hsdresults4$site))) +
geom_text(aes(x=site, y=min(hsdresults4$Min), label=groups), nudge_y=-0.2) +
coord_flip()
print(pinhsdplot)
head(rates_mh_overall_setsumm)
models <- rates_mh_overall_setsumm %>%
group_by(site) %>%
do(mod = t.test(.$overall_mean, mu=3.5, alternative="less"))
modelcoef <- tidy(models, mod, conf.int=FALSE) %>%
select(site, estimate, statistic, p.value, method, alternative)
kable(modelcoef, digits = c(4,2,3,4,4,4), align='c', caption = "t-test results for incremental accretion rates by site, as compared to local SLR rate of 3.5 mm/yr")
models <- marker_rates_inc_SETsumm %>%
group_by(site) %>%
do(mod = t.test(.$mean_inc_rate, mu=3.5, alternative="less"))
modelcoef <- tidy(models, mod, conf.int=FALSE) %>%
select(site, estimate, statistic, p.value, method, alternative)
kable(modelcoef, digits = c(4,2,3,4,4,4), align='c', caption = "t-test results for incremental accretion rates by site, as compared to local SLR rate of 3.5 mm/yr")
models <- marker_rates_inc_SETsumm %>%
group_by(site) %>%
do(mod = t.test(.$mean_inc_rate, mu=3.5, alternative="less"))
modelcoef <- tidy(models, mod, conf.int=FALSE) %>%
select(site, estimate, statistic, p.value, method, alternative)
kable(modelcoef, digits = c(4,2,3,4,4,4), align='c', caption = "t-test results for incremental accretion rates by site, as compared to local SLR rate of 3.5 mm/yr")
models <- rates_mh_overall_setsumm %>%
group_by(site) %>%
do(mod = t.test(.$overall_mean, mu=3.5, alternative="less"))
modelcoef <- tidy(models, mod, conf.int=FALSE) %>%
select(site, estimate, statistic, p.value, method, alternative)
kable(modelcoef, digits = c(4,2,3,4,4,4), align='c', caption = "t-test results for annualized accretion rates by site, as compared to local SLR rate of 3.5 mm/yr")
